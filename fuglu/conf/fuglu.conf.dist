#This is the configuration file for the fuglu content scanner
#main fuglu configuration is in section [main], every plugin has its own section
#after modifying this file, run fuglu --lint to check if it'll be happy with it


####################### MAIN CONFIGURATION ###############################
[main]
#identifier can be any string that helps you identifying your config file
#this helps making sure the correct config is loaded. this identifier will be printed out when fuglu is reloading its config
#Default: dist
identifier=dist

#run as a daemon? (fork)
#default: 1
daemonize=1

#run as user
user=nobody
#run as group
group=nobody

#where should fuglu search for additional plugins
#default: empty
plugindir=

#what SCANNER plugins do we load, comma separated
plugins=archive,attachment,clamav,spamassassin
#experimental plugins you may add here:
#fuglu.plugins.fuheaders.HeaderPlugin

#what PREPENDER plugins do we load, comma separated
#prepender plugins are plugins run at the beginning which can have influence on the scanner plugins
#like disable certain plugins based on special conditions
# eg. skip SA for outgoing mail
prependers=debug,skip
#experimental plugins you may add here:
#

#what APPENDER plugins do we load, comma separated
#appender plugins are plugins run after the scanning plugins
#appenders will always be run, even if a a scanner plugin decided to delete/bounce/whatever a message
#(unless a mail is deferred in which case running the appender would not make sense as it will come again)
appenders=
#experimental plugins you may add here:
#


#bindaddress
bindaddress=127.0.0.1

#incoming port(s) (postfix connects here)
#you can use multiple comma separated ports here
#f.ex. to separate incoming and outgoing mail
incomingport=10025,10099,10888
#10025: standard incoming mail
#10099: outgoing mail
#10888: debug port

#outgoing port (what port does postfix listen for re-injects)
outgoingport=10026

#outgoing helo we should use
outgoinghelo=change.me.in.fuglu.conf.local

#temp dir where we can store messages
tempdir=/tmp/

#String to prepend to added headers
prependaddedheaders=X-Fuglu-

#If a plugin decides to delete a message, save a copy here
#default empty, eg. do not save a backup copy
trashdir=


#Disable Bounces
#if this is set to True/1/yes , no Bounces will be sent from Fuglu eg. after a blocked attachment has been detected
#This may be used for debugging/testing
disablebounces=0

#write debug info header to every mail
debuginfoheader=0


#Statistics
mrtgdir=/usr/local/fuglu/mrtg


[performance]
#minimum scanner threads
minthreads=2

#maximum scanner threads
maxthreads=40

[spam]
#what to do with messages that plugins think are spam but  not so sure  ("low spam")
#in normal usage you probably never set this something other than DUNNO
#this is a DEFAULT action, eg. anti spam plugins should take this if you didn't set 
# a individual override
defaultlowspamaction=DUNNO

#what to do with messages if a plugin is sure it is spam ("high spam") 
#in after-queue mode this is probably still DUNNO or maybe DELETE for courageous people
#this is a DEFAULT action, eg. anti spam plugins should take this if you didn't set 
# a individual override
defaulthighspamaction=DUNNO


[virus]
#what to do with messages if a plugin detects a virus
#in after-queue mode this should probably be DELETE
#in pre-queue mode you could use REJECT
#this is a DEFAULT action, eg. anti-virus plugins should take this if you didn't set 
# a individual override
defaultvirusaction=DELETE


####################### PLUGIN CONFIGURATION ###############################

#Debug
#The debug plugin allows debugging single mails sent to a specific port to be debugged to a logfile
#Make sure the debugport is also set in the incomingport configuration option in the main section
[debug]
debugport=10888

debugfile=/tmp/fuglu_debug.log

#don't allow debugged messages to be bounced
nobounce=True

#don't re-inject debugged messages
noreinject=True

#Don't run appenders for debugged messages
noappender=True




[PluginAlias]
#This section allows to set aliases for plugins

#prependers
debug=fuglu.plugins.p_debug.MessageDebugger
skip=fuglu.plugins.p_skipper.PluginSkipper

#scanners
archive=fuglu.plugins.archive.ArchivePlugin
attachment=fuglu.plugins.attachment.FiletypePlugin
clamav=fuglu.plugins.clamav.ClamavPlugin
spamassassin=fuglu.plugins.sa.SAPlugin
vacation=fuglu.plugins.vacation.VacationPlugin

#appenders


#Spamassassin
[SAPlugin]
#where is spamd
host=localhost
port=783

#maximum size in bytes. larger messages will be skipped
maxsize=256000

#what header does sa set
spamheader=X-Spam-Status

#how long should we wait for an answer from sa
timeout=30

#how often should we try to connect to sa
retries=5

#set to 0/no/false to disable spamassassin per user configs
peruserconfig=1

#from what level on should we consider message as high spam
highspamlevel=15

#what should we do with low spam (eg. detected as spam, but score not over highspamlevel)
#normally you would use DEFAULTLOWSPAMACTION here, this will get the setting from [spam]::defaultlowspamaction
#but you can override this here if you like
lowspamaction=DEFAULTLOWSPAMACTION

#what should we do with high spam 
#normally you would use DEFAULTHIGHSPAMACTION here, this will get the setting from [spam]::defaulthighspamaction
#but you can override this here if you like
highspamaction=DEFAULTHIGHSPAMACTION

#SQL Blacklist
#fuglu can consult the blacklist for messages that cannot be scanned by SA because they are too big
#This requires that sqlalchemy is installed (easy_install sqlalchemy should do the trick)
check_sql_blacklist=0

#sqlalchemy connect string
sql_blacklist_dbconnectstring=mysql:///localhost/spamassassin

#SQL query to get the blacklist entries for a suspect
#you may use template variables: ${from_address} ${from_domain} ${to_address} ${to_domain}
sql_blacklist_sql=SELECT value FROM userpref WHERE prefid='blacklist_from' AND username in ('@GLOBAL',concat('%',${to_domain}),${to_address})

#Clam antivirus (clamd)
[ClamavPlugin]
host=localhost
port=3310
timeout=10
#should match the "StreamMaxLength" config option in clamd.conf
maxsize=22000000
retries=3
virusaction=DEFAULTVIRUSACTION

#Attachment 
[FiletypePlugin]
template_blockedfile=/etc/fuglu/templates/blockedfile.tmpl
rulesdir=/etc/fuglu/rules
#what should the plugin do when a blocked attachment is detected
#BOUNCE (default): send a bounce message out of fuglu
#REJECT : reject the message (recommended in pre-queue mode)
#DELETE : discard messages (not recommended)
blockaction=BOUNCE

[HeaderPlugin]
removeheaders=

[ArchivePlugin]
#Make a copy of incoming messages based on rules
archiverules=/etc/fuglu/archive.regex
archivedir=/tmp/archive
#create a subdirectory of the destination domain within archivedir
makedomainsubdir=1

#if true/1/yes: store original message
#if false/0/no: store message probably altered by previous plugins, eg with spamassassin headers
storeoriginal=1

[PluginSkipper]
#Skip plugins based on rules
filterfile=/etc/fuglu/skipplugins.regex


[VacationPlugin]
dbconnectstring=sqlite:////usr/local/fuglu/vacation.db

